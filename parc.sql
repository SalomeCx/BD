CREATE TABLE IF NOT EXISTS ETAT (
	Numero INTEGER NOT NULL,
	Libelle CHAR(20) NOT NULL,
	PRIMARY KEY (Numero)
);

CREATE TABLE IF NOT EXISTS INSTALLATION (
	Numero INTEGER NOT NULL,
	Nom CHAR(20) NOT NULL,
	HeureOuverture INTEGER NOT NULL,
	HeureFermeture INTEGER NOT NULL,
	Etat INTEGER NOT NULL,
	Cout INTEGER NOT NULL,
	CHECK (HeureOuverture >= 0 AND HeureOuverture <= 23),
	CHECK (HeureFermeture >= 0 AND HeureFermeture <= 23),
	CHECK (HeureOuverture < HeureFermeture),
	CHECK (Cout >= 0),
	FOREIGN KEY (Etat) REFERENCES ETAT(Numero),
	PRIMARY KEY (Numero)
);

CREATE TABLE IF NOT EXISTS ATTRACTION (
	Numero INTEGER NOT NULL,
	Capacite INTEGER NOT NULL,
	TempsAttente TIME NOT NULL,
	NombreVisiteursHeure INTEGER NOT NULL,
	CHECK (Capacite >= 0),
	CHECK (NombreVisiteursHeure >= 0),
	FOREIGN KEY (Numero) REFERENCES INSTALLATION(Numero) ON DELETE CASCADE,
	PRIMARY KEY (Numero)
);

CREATE TABLE IF NOT EXISTS MAGASIN (
	Numero INTEGER NOT NULL,
	Revenus INTEGER NOT NULL,
	CHECK (Revenus >= 0),
	FOREIGN KEY (Numero) REFERENCES INSTALLATION(Numero) ON DELETE CASCADE,
	PRIMARY KEY (Numero)
);

CREATE TABLE IF NOT EXISTS RESTAURANT (
	Numero INTEGER NOT NULL,
	Revenus INTEGER NOT NULL,
	Capacite INTEGER NOT NULL,
	CHECK (Revenus >= 0),
	CHECK (Capacite >= 0),
	FOREIGN KEY (Numero) REFERENCES INSTALLATION(Numero) ON DELETE CASCADE,
	PRIMARY KEY (Numero)
);

CREATE TABLE IF NOT EXISTS EMPLOYE (
	Numero INTEGER NOT NULL,
	Nom CHAR(20) NOT NULL,
	Prenom CHAR(20) NOT NULL,
	Salaire INTEGER NOT NULL,
	NumeroIntallation INTEGER NOT NULL,
	CHECK (Salaire >= 1300),
	FOREIGN KEY (NumeroIntallation) REFERENCES INSTALLATION(Numero) ON DELETE CASCADE,
	PRIMARY key (Numero)
);

CREATE TABLE IF NOT EXISTS PRODUIT (
	Numero INTEGER NOT NULL,
	Nom CHAR(20) NOT NULL,
	Prix INTEGER NOT NULL,
	PRIMARY KEY (Numero)
);

CREATE TABLE IF NOT EXISTS FOURNISSEUR (
	Numero INTEGER NOT NULL,
	Nom CHAR(20) NOT NULL,
	PRIMARY KEY (Numero)
);

CREATE TABLE IF NOT EXISTS RESERVATION (
	Numero INTEGER NOT NULL,
	DateResa DATE NOT NULL,
	NombrePersonnes INTEGER NOT NULL,
	NumeroRestaurant INTEGER NOT NULL,
	CHECK (DateResa >= CURDATE()),
	CHECK (NombrePersonnes > 0),
	FOREIGN KEY (NumeroRestaurant) REFERENCES RESTAURANT(Numero) ON DELETE CASCADE,
	PRIMARY KEY (Numero)
) ;

ALTER TABLE RESERVATION ADD CHECK ( ( ( SELECT SUM(NombrePersonnes) FROM RESERVATION WHERE (RESERVATION.DateResa = DateResa AND RESERVATION.NumeroRestaurant = NumeroRestaurant) ) + NombrePersonnes ) >= ( SELECT SUM(Capacite) FROM RESTAURANT WHERE RESTAURANT.NumeroRestaurant = NumeroRestaurant) ) ;

CREATE TABLE IF NOT EXISTS VENDRE (
	NumeroProduit INTEGER NOT NULL,
	NumeroMagasin INTEGER NOT NULL,
	Quantite INTEGER NOT NULL,
	CHECK (Quantite >= 0),
	PRIMARY KEY (NumeroProduit,NumeroMagasin),
	FOREIGN KEY (NumeroProduit) REFERENCES PRODUIT(Numero) ON DELETE CASCADE,
	FOREIGN KEY (NumeroMagasin) REFERENCES MAGASIN(Numero) ON DELETE CASCADE
) ;

CREATE TABLE IF NOT EXISTS FOURNIR (
	NumeroProduit INTEGER NOT NULL,
	NumeroMagasin INTEGER NOT NULL,
	NumeroFournisseur INTEGER NOT NULL,
	PRIMARY KEY (NumeroProduit,NumeroMagasin,NumeroFournisseur),
	FOREIGN KEY (NumeroProduit) REFERENCES PRODUIT(Numero) ON DELETE CASCADE,
	FOREIGN KEY (NumeroMagasin) REFERENCES MAGASIN(Numero) ON DELETE CASCADE,
	FOREIGN KEY (NumeroFournisseur) REFERENCES FOURNISSEUR(Numero) ON DELETE CASCADE
);

